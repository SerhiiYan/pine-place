---
// src/components/listings/OtherListings.astro

import { Icon } from 'astro-icon/components';
import FavoriteButton from './FavoriteButton.jsx';

const { listings, host } = Astro.props;

function getBasePrice(listing) {
  try {
    const priceSection = listing.conditions.sections.find(s => s.title === 'Основные цены');
    const priceItem = priceSection.items[0].value;
    return priceItem.match(/\d+/)[0]; 
  } catch (error) {
    return null;
  }
}
---

{listings && listings.length > 0 && (
  <section class="other-listings-section">
    <div class="container">
      <h2 class="section-title">Другие домики от {host.name}</h2>
      
      <!-- ИЗМЕНЕНИЕ: Добавлен класс .swiper-container-padded для отступов -->
      <div class="swiper other-listings-swiper swiper-container-padded">
        <div class="swiper-wrapper">
          
          {listings.map(listing => {
            const basePrice = getBasePrice(listing);
            return (
              <div class="swiper-slide">
                <a href={`/houses/${listing.slug}`} class="card-link">
                  <div class="card">
                    <div class="card-image-wrapper">
                      <img src={listing.mainImage} alt={`Фото ${listing.name}`} class="card-image" loading="lazy" />
                      <FavoriteButton client:visible />
                    </div>
                    
                    <div class="card-content">
                      <h3 class="card-title">{listing.name}</h3>
                      <p class="card-location">{listing.location}</p>
                      
                      {basePrice && (
                        <p class="card-price">
                          <span>{basePrice} BYN</span> / ночь
                        </p>
                      )}

                      <div class="card-footer">
                        <span>{listing.type}</span>
                        <span>Гостей: {listing.sleeps}</span>
                      </div>
                    </div>
                  </div>
                </a>
              </div>
            )
          })}
        </div>
      </div> 
    </div>
  </section>
)}


<script>
  // ИЗМЕНЕНИЕ: Добавляем модуль Autoplay
  import Swiper from 'swiper';
  import { Autoplay } from 'swiper/modules';
  import 'swiper/css';

  const swiperContainer = document.querySelector('.other-listings-swiper');

  if (swiperContainer) {
    const swiper = new Swiper(swiperContainer, {
      modules: [Autoplay],
      loop: true,
      speed: 9000,
      autoplay: {
        delay: 0,
        disableOnInteraction: false, // Не выключать после ручного свайпа
        pauseOnMouseEnter: true, // Пауза при наведении мыши
      },
      
      spaceBetween: 24, 
      slidesPerView: 1.2, 
      freeMode: {
        enabled: true,
        sticky: false,
        momentumBounce: false,
      },
      breakpoints: {
        640: { slidesPerView: 2, spaceBetween: 24 },
        1024: { slidesPerView: 3, spaceBetween: 30 }
      },
    });
  }
</script>


<style>
  /* Общие стили секции */
  .other-listings-section {
    padding: 4rem 0;
    border-top: 1px solid #e0e0e0;
    margin-top: 3rem;
  }
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1.5rem;
    position: relative;
  }
  .section-title {
    font-size: 1.8rem;
    color: #2C3E3A;
    margin-bottom: 2rem;
  }

  /* ИЗМЕНЕНИЕ: Добавляем отступы для тени */
  .swiper-container-padded {
    padding-top: 1rem;
    padding-bottom: 1rem;
  }

  .swiper-wrapper {
    transition-timing-function: linear !important;
    z-index: 1;
  }
  
  /* Swiper-обертки */
  .swiper-slide {
    height: auto; 
  }
  .swiper-wrapper {
    /* Обеспечиваем, чтобы тень при наведении не обрезалась соседним слайдом */
    z-index: 1;
  }

  /* Стили карточки (без изменений) */
  .card-link { text-decoration: none; color: inherit; display: block; height: 100%; }
  .card { border-radius: 12px; overflow: hidden; background: #fff; box-shadow: 0 4px 12px rgba(0,0,0,0.08); height: 100%; transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out; display: flex; flex-direction: column; }
  .card:hover { transform: translateY(-5px); box-shadow: 0 8px 20px rgba(0,0,0,0.12); z-index: 2; position: relative; } /* Добавляем z-index, чтобы тень была поверх соседей */
  
  .card-image-wrapper { position: relative; width: 100%; }
  .card-image { width: 100%; height: 220px; object-fit: cover; display: block; }
  
  .favorite-btn {
    position: absolute; top: 0.8rem; right: 0.8rem; background: rgba(0, 0, 0, 0.35); border-radius: 50%; border: none;
    color: white; width: 36px; height: 36px; display: flex; align-items: center; justify-content: center; cursor: pointer;
    transition: all 0.2s; padding: 0; z-index: 3;
  }
  .favorite-btn:hover { background: #2c3e3a; transform: scale(1.2); }
  .favorite-btn svg { width: 20px; height: 20px; }
  
  .card-content { padding: 1rem 1.25rem; flex-grow: 1; display: flex; flex-direction: column; }
  
  .card-title {
    margin: 0 0 0.25rem 0; font-size: 1.25rem; line-height: 1.3; min-height: 2.6em; 
    -webkit-box-orient: vertical; display: -webkit-box; -webkit-line-clamp: 2;
    overflow: hidden; text-overflow: ellipsis;
  }
  
  .card-location { 
    color: #6c757d; font-size: 0.9rem; margin-bottom: 0.75rem; 
    white-space: nowrap; overflow: hidden; text-overflow: ellipsis;
  }
  
  .card-price {
    font-size: 0.9rem; color: #333; margin-top: auto;
  }
  .card-price span { font-weight: 700; font-size: 1.1rem; }
  
  .card-footer { display: flex; justify-content: space-between; font-size: 0.9rem; color: #333; border-top: 1px solid #eee; padding-top: 0.75rem; margin-top: 0.75rem; }

  /* ИЗМЕНЕНИЕ: Убираем стили для стрелок */
  
  @media (max-width: 768px) {
    .container { padding: 0; }
    .other-listings-section { padding-left: 1rem; } 
    .section-title { padding-left: 0; }
    .other-listings-swiper { padding-right: 1rem; } 
  }
</style>